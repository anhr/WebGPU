/**
 * @module WebGPU
 * @description WebGPU Compute.
 *
 * @author [Andrej Hristoliubov]{@link https://anhr.github.io/AboutMe/}
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.WebGPU={})}(this,function(e){"use strict";
/**
 * node.js version of the synchronous download of the file.
 * @author [Andrej Hristoliubov]{@link https://github.com/anhr}
 *
 * @copyright 2011 Data Arts Team, Google Creative Lab
 *
 * @license under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 */function a(t){if(this.loadXMLDoc=function(){var e;if(window.XMLHttpRequest){if(!(e=new XMLHttpRequest))throw"new XMLHttpRequest() failed!"}else{if(!window.ActiveXObject)throw"myRequest.loadXMLDoc(...) failed!";if(!(e=this.NewActiveXObject()))throw"NewActiveXObject() failed!"}return e},this.NewActiveXObject=function(){try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e){}try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(e){}return o('This browser does not support XMLHttpRequest. Probably, your security settings do not allow Web sites to use ActiveX controls installed on your computer. Refresh your Web page to find out the current status of your Web page or enable the "Initialize and script ActiveX controls not marked as safe" and "Run Active X controls and plug-ins" of the Security settings of the Internet zone of your browser.'),null},this.XMLHttpRequestStart=function(e,t){this.XMLHttpRequestStop(),this.req.onreadystatechange=e,"onerror"in this.req&&(this.req.onerror=function(e){o("XMLHttpRequest error. url: "+this.url)}),this.XMLHttpRequestReStart(t)},this.getUrl=function(){return void 0!==this.url&&null!=this.url||o("XMLHttpRequest: Invalid url: "+this.url),this.url+(this.params||"")},this.XMLHttpRequestReStart=function(e){try{void 0===e&&(e=!0),this.req.open("GET",this.getUrl(),e),e&&("timeout"in this.req&&(this.req.timeout=9e4),"ontimeout"in this.req?this.req.ontimeout=function(){o("XMLHttpRequest timeout")}:(clearTimeout(this.timeout_id_SendReq),this.timeout_id_SendReq=setTimeout(function(){o("XMLHttpRequest timeout 2")},9e4))),this.req.send(null)}catch(e){o(e.message+" url: "+this.url)}},this.XMLHttpRequestStop=function(){null!=this.req&&this.req.abort()},this.ProcessReqChange=function(e){var t=this.req;switch(t.readyState){case 4:if("unknown"==typeof t.status)return consoleError('typeof XMLHttpRequest status == "unknown"'),!0;if(200==t.status)return clearTimeout(this.timeout_id_SendReq),e(this);o("Invalid XMLHttpRequest status : "+t.status+" url: "+this.url);break;case 1:case 2:case 3:break;default:throw"processReqChange(); req.readyState = "+t.readyState}return!0},this.processStatus200Error=function(){var e=this.GetElementText("error",!0);return!!e&&(o(e),!0)},this.GetElementText=function(e,t){var r=this.req;if(!r.responseXML)return 1!=t&&o("GetXMLElementText(xmlhttp, "+e+"); xmlhttp.responseXML is null.\nxmlhttp.responseText:\n"+r.responseText),null;var s=r.responseXML.getElementsByTagName(e);if(0==s.length)return 1!=t&&o('GetXMLElementText(xmlhttp, "'+e+'"); element.length == '+s.length),"";for(var a="",n=0;n<s.length;n++)if(void 0===s[n].textContent){if(void 0===s[n].text)return o("GetXMLElementText(xmlhttp, "+e+"); element["+n+"].text) == undefined"),"";""!=a&&(a+=" "),a+=s[n].text}else a+=s[n].textContent;return a},t.data)this.req=t.data.req,this.url=t.data.url,this.params=t.data.params;else try{this.req=this.loadXMLDoc()}catch(e){var r=void 0===e.message?e:e.message;return void o("Your browser is too old and is not compatible with our site.\n\n"+window.navigator.appName+" "+window.navigator.appVersion+"\n\n"+r)}function o(e){console.error(e),t.onerror(e)}this.req||consoleError("Invalid myRequest.req: "+this.req)}function r(t,r){(r=r||{}).onload=r.onload||function(){},r.onerror=r.onerror||function(){};var s,e=new a(r);return e.url=t,e.XMLHttpRequestStart(function(){e.ProcessReqChange(function(e){e.processStatus200Error()||(s=e.req.responseText,r.onload(s,t))})},void 0!==r.async),s}
/**
 * node.js version of the synchronous download of the file.
 * @author [Andrej Hristoliubov]{@link https://github.com/anhr}
 *
 * @copyright 2011 Data Arts Team, Google Creative Lab
 *
 * @license under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 */
var h={sync:r,async:function(e,t){t.async=!0,r(e,t)}};
/**
 * @module WebGPU
 * @description [WebGPU]{@link https://gpuweb.github.io/gpuweb/}. GPU Compute on the web.
 * @see [Get started with GPU Compute on the web]{@link https://web.dev/gpu-compute/}
 *
 * @author [Andrej Hristoliubov]{@link https://github.com/anhr}
 *
 * @copyright 2011 Data Arts Team, Google Creative Lab
 *
 * @license under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
*/class i{constructor(l){let p=null;!async function t(){if(i.isSupportWebGPU()){var e=await navigator.gpu.requestAdapter();if(!e)return console.error("No WebGPU adapters found."),!1;(p=await e.requestDevice()).lost.then(e=>{console.error("WebGPU device was lost: "+e.message),p=null,"destroyed"!=e.reason&&t()});{const u=l.input;let a,i;const f={param:0,max:0};function r(r,s){let a=0;const n=[];Object.keys(r).forEach(e=>{var t=r[e];"number"==typeof t?t%1==0||s!==Uint32Array?(a+=s.BYTES_PER_ELEMENT,n.push(t)):console.error("WebGPU: Invalid "+e+" = "+t+" parameter type. "+(s===Uint32Array?"Integer":"Float")+" is allowed only."):console.error("WebGPU: Invalid param: "+t)}),r.paramBuffer=p.createBuffer({size:a,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),p.queue.writeBuffer(r.paramBuffer,0,new s(n)),r.data=n}u&&(u.matrices&&u.matrices.forEach(e=>{const t=[e.length,e[0].length];e.forEach(e=>e.forEach(e=>t.push(e))),e.matrix=new Float32Array(t),e.gpuBuffer=p.createBuffer({mappedAtCreation:!0,size:e.matrix.byteLength,usage:GPUBufferUsage.STORAGE}),new Float32Array(e.gpuBuffer.getMappedRange()).set(e.matrix),e.gpuBuffer.unmap()}),u.params)&&Object.keys(u.params).forEach(e=>{switch(e){case"f32":r(u.params[e],Float32Array);break;case"u32":r(u.params[e],Uint32Array);break;default:console.error('WebGPU: Invalid input.params "'+e+'" key.')}}),l.results.forEach((e,t)=>{e.out?void 0!==e.phase&&e.phase>f.max&&(f.max=e.phase):console.error("WebGPU: settings.results["+t+"].out is undefined.")}),0<f.max&&(f.paramBuffer=p.createBuffer({size:Uint32Array.BYTES_PER_ELEMENT,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),p.queue.writeBuffer(f.paramBuffer,0,new Uint32Array([f.param]))),l.results&&l.results.forEach(e=>{void 0===e.type&&(e.type=Float32Array);var t=e.type.BYTES_PER_ELEMENT*e.count;t?p.limits.maxBufferSize<t?console.error("WebGPU: GPUDevice buffer size = "+t+" is limited to "+p.limits.maxBufferSize):e.buffer=p.createBuffer({size:t,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC}):console.error('WebGPU: "count" key is not defined in the settings.results item.')});const o=[],c=[];let t=0;if(u){if(u.matrices)for(var s=0;s<u.matrices.length;s++)o.push({binding:t,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}}),c.push({binding:t,resource:{buffer:u.matrices[s].gpuBuffer}}),t++;u.params&&Object.keys(u.params).forEach(e=>{switch(e){case"f32":case"u32":o.push({binding:t,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}}),c.push({binding:t,resource:{buffer:u.params[e].paramBuffer}}),t++;break;default:console.error('WebGPU: Invalid input.params "'+e+'" key.')}})}async function n(e){l.shaderCodeText&&(e=l.shaderCodeText(e));var t,r,e=p.createShaderModule({code:e});const o=p.createComputePipeline({layout:p.createPipelineLayout({bindGroupLayouts:[a]}),compute:{module:e,entryPoint:"main"}});function s(){const t=p.createCommandEncoder();var e=t.beginComputePass();e.setPipeline(o),e.setBindGroup(0,i);let r=[];u&&u.matrices?u.matrices.forEach((e,t)=>r.push(Math.ceil(e.matrix[t]/8))):l.workgroupCount?r=l.workgroupCount:r.push(1);var s=r[0],a=r[1],n=r[3];return e.dispatchWorkgroups(s,a,n),e.end(),l.results&&l.results.forEach(e=>{e.gpuReadBuffer=p.createBuffer({size:e.buffer.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),t.copyBufferToBuffer(e.buffer,0,e.gpuReadBuffer,0,e.buffer.size)}),t.finish()}if(p.queue.submit([s()]),l.results)for(;;){for(let e=0;e<l.results.length;e++)t=e,r=void 0,await((r=l.results[t]).out?(r.phase||0)!==f.param||(await r.gpuReadBuffer.mapAsync(GPUMapMode.READ),!r.out(r.gpuReadBuffer.getMappedRange())):!console.error("WebGPU: settings.results["+t+"].out is undefined."));if(f.param++,f.param>f.max)break;p.queue.writeBuffer(f.paramBuffer,0,new Uint32Array([f.param])),p.queue.submit([s()])}}l.results&&l.results.forEach(e=>{o.push({binding:t,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),c.push({binding:t,resource:{buffer:e.buffer}}),t++}),0<f.max&&(o.push({binding:t,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}}),c.push({binding:t,resource:{buffer:f.paramBuffer}}),t++),a=p.createBindGroupLayout({entries:o}),i=p.createBindGroup({layout:a,entries:c}),(e=l.shaderCode)?n(e):h.async(l.shaderCodeFile,{onload:function(e,t){n(e)}})}}else console.error("WebGPU: User agent doesn't support WebGPU. WebGPU is available for now in Chrome Canary https://www.google.com/intl/ru/chrome/canary/ on desktop behind an experimental flag. You can enable it at chrome://flags/#enable-unsafe-webgpu. The API is constantly changing and currently unsafe. As GPU sandboxing isn't implemented yet for the WebGPU API, it is possible to read GPU data for other processes! Don't browse the web with it enabled.")}()}}i.isSupportWebGPU=function(){return"gpu"in navigator},i.out2Matrix=function(e,i={}){const u=new(i.type||Float32Array)(e),t=[];let f,c;const l=i.size;return f=l?(c=l.length,0):(c=u[0])+1,function t(r,s){if(!(r>c)){var a=l?l[r-1]:u[r];for(let e=0;e<a;e++){var n=[];if(r===c-1){var o=l?l[c-1]:u[c];for(let e=0;e<o;e++){if(f>=u.length)return void console.error("WebGPU.out2Matrix: out of the index range of the out array. "+f);n.push(u[f]),f++}i.push&&i.push(n)}else t(r+1,n);i.push&&!i.returnMatrix||s.push(n)}}}(1,t),t},e.default=i,Object.defineProperty(e,"__esModule",{value:!0})});
