{"version":3,"file":"WebGPU.module.js","sources":["../../../commonNodeJS/master/loadFileNodeJS/index.js","../../../commonNodeJS/master/loadFileNodeJS/loadFile.js","../WebGPU.js"],"sourcesContent":["/**\r\n * node.js version of the synchronous download of the file.\r\n * @author [Andrej Hristoliubov]{@link https://github.com/anhr}\r\n *\r\n * @copyright 2011 Data Arts Team, Google Creative Lab\r\n *\r\n * @license under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n */\r\n\r\n//The myRequest is cross-browser XMLHttpRequest wrapper.\r\nfunction myRequest( options ) {\r\n\r\n\tthis.loadXMLDoc = function () {\r\n\t\tvar req;\r\n\r\n\t\tif ( window.XMLHttpRequest ) {\r\n\t\t\treq = new XMLHttpRequest();\r\n\t\t\tif ( !req )\r\n\t\t\t\tthrow \"new XMLHttpRequest() failed!\"\r\n\t\t}\r\n\t\telse if ( window.ActiveXObject ) {\r\n\t\t\treq = this.NewActiveXObject();\r\n\t\t\tif ( !req )\r\n\t\t\t\tthrow \"NewActiveXObject() failed!\"\r\n\t\t}\r\n\t\telse throw \"myRequest.loadXMLDoc(...) failed!\";\r\n\t\treturn req;\r\n\t}\r\n\r\n\tthis.NewActiveXObject = function () {\r\n\t\ttry { return new ActiveXObject( \"Msxml2.XMLHTTP.6.0\" ); }\r\n\t\tcatch ( e ) { }\r\n\t\ttry { return new ActiveXObject( \"Msxml2.XMLHTTP.3.0\" ); }\r\n\t\tcatch ( e ) { }\r\n\t\ttry { return new ActiveXObject( \"Msxml2.XMLHTTP\" ); }\r\n\t\tcatch ( e ) { }\r\n\t\ttry { return new ActiveXObject( \"Microsoft.XMLHTTP\" ); }\r\n\t\tcatch ( e ) { }\r\n\t\tErrorMessage( 'This browser does not support XMLHttpRequest. Probably, your security settings do not allow Web sites to use ActiveX controls installed on your computer. Refresh your Web page to find out the current status of your Web page or enable the \"Initialize and script ActiveX controls not marked as safe\" and \"Run Active X controls and plug-ins\" of the Security settings of the Internet zone of your browser.' );\r\n\t\treturn null;\r\n\t}\r\n\r\n\tthis.XMLHttpRequestStart = function ( onreadystatechange, async ) {\r\n\r\n\t\tthis.XMLHttpRequestStop();//For compatibility with IE Windows Phone\r\n\r\n\t\tthis.req.onreadystatechange = onreadystatechange;\r\n\r\n\t\t//ATTENTION!!! do not works in IE\r\n\t\tif ( \"onerror\" in this.req ) {\r\n\t\t\tthis.req.onerror = function ( event ) {\r\n\t\t\t\tErrorMessage( \"XMLHttpRequest error. url: \" + this.url, false, false );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.XMLHttpRequestReStart( async );\r\n\t}\r\n\r\n\tthis.getUrl = function () {\r\n\t\t\r\n\t\tif ( ( typeof this.url == 'undefined' ) || ( this.url == null ) ) {\r\n\r\n\t\t\t//непонятно зачем это засунул\r\n//\t\t\tthis.url = \"XMLHttpRequest.xml\";\r\n\t\t\t\r\n\t\t\tErrorMessage( 'XMLHttpRequest: Invalid url: ' + this.url );\r\n\t\t\t\r\n\t\t}\r\n\t\treturn this.url + ( this.params ? this.params : \"\" );\r\n\t\t\r\n\t}\r\n\r\n\tthis.XMLHttpRequestReStart = function ( async ) {\r\n\t\ttry {\r\n\t\t\tif ( typeof async == 'undefined' )\r\n\t\t\t\tasync = true;\r\n\t\t\tthis.req.open( \"GET\", this.getUrl(), async );\r\n\t\t\tif ( async ) {\r\n\t\t\t\tvar timeout = ( 60 + 30 ) * 1000;//Внимание!!! Задержка должна быть больше CSocketWaitEvent::WaitResponse\r\n\t\t\t\tif ( \"timeout\" in this.req )//for IE6\r\n\t\t\t\t\tthis.req.timeout = timeout;\r\n\t\t\t\tif ( \"ontimeout\" in this.req )\r\n\t\t\t\t\tthis.req.ontimeout = function () {\r\n\t\t\t\t\t\tErrorMessage( 'XMLHttpRequest timeout', false, false );\r\n\t\t\t\t\t}\r\n\t\t\t\telse {//for Safari, IE6\r\n\t\t\t\t\tclearTimeout( this.timeout_id_SendReq );\r\n\t\t\t\t\tthis.timeout_id_SendReq = setTimeout( function () {\r\n\t\t\t\t\t\tErrorMessage( 'XMLHttpRequest timeout 2', false, false );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t, timeout );\r\n\t\t\t\t\t//console.log(\"setTimeout this.req.timeout_id_SendReq = \" + this.req.timeout_id_SendReq);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.req.send( null );\r\n\t\t} catch ( e ) {\r\n\t\t\tErrorMessage( e.message + \" url: \" + this.url, false, false );\r\n\t\t}\r\n\t}\r\n\r\n\tthis.XMLHttpRequestStop = function () {\r\n\t\t//console.log(\"XMLHttpRequestStop(...)\");\r\n\t\tif ( this.req == null )\r\n\t\t\treturn;\r\n\t\tthis.req.abort();\r\n\t}\r\n\r\n\tthis.ProcessReqChange = function ( processStatus200 ) {\r\n\t\tvar req = this.req;\r\n\t\tif ( ( typeof isIE === 'undefined' ) || !isIE ) {\r\n\t\t\t//console.log(\"processReqChange(); req.statusText: \" + req.statusText + \". req.status = \" + req.status + \". req.readyState = \" + req.readyState + \". req.responseText: \" + req.responseText);\r\n\t\t}\r\n\t\t// only if req shows \"complete\"\r\n\t\t//http://www.w3schools.com/ajax/ajax_xmlhttprequest_onreadystatechange.asp\r\n\t\t//http://xmlhttprequest.ru/w3c\r\n\t\tswitch ( req.readyState ) {\r\n\t\t\tcase 4://request finished and response is ready\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( typeof req.status == \"unknown\" ) {//IE5 timeout\r\n\t\t\t\t\t\tconsoleError( 'typeof XMLHttpRequest status == \"unknown\"' );\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//Я не могу вставлять switch один в другой\r\n\t\t\t\t\tif ( req.status == 200 )//OK)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tclearTimeout( this.timeout_id_SendReq );\r\n\t\t\t\t\t\treturn processStatus200( this );\r\n\t\t\t\t\t}//200://OK\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tErrorMessage( \"Invalid XMLHttpRequest status : \" + req.status + \" url: \" + this.url );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1://server connection established\r\n\t\t\tcase 2://request received\r\n\t\t\tcase 3://processing request\r\n\t\t\t\tbreak;\r\n\t\t\t//\t\tcase 404:\r\n\t\t\tcase 0://request not initialized\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"processReqChange(); req.readyState = \" + req.readyState;\r\n\t\t\t\tbreak;\r\n\t\t}//switch(req.readyState)\r\n\t\treturn true;\r\n\t}\r\n\r\n\tthis.processStatus200Error = function () {\r\n\t\tvar error = this.GetElementText( 'error', true );\r\n\t\tif ( error ) {\r\n\t\t\tErrorMessage( error );\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tthis.GetElementText = function ( tagName, noDisplayErrorMessage ) {\r\n\t\tvar xmlhttp = this.req;\r\n\t\tif ( !xmlhttp.responseXML ) {\r\n\t\t\tif ( noDisplayErrorMessage != true )\r\n\t\t\t\tErrorMessage( 'GetXMLElementText(xmlhttp, ' + tagName + '); xmlhttp.responseXML is null.\\nxmlhttp.responseText:\\n' + xmlhttp.responseText );\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar element = xmlhttp.responseXML.getElementsByTagName( tagName );\r\n\r\n\t\t//ATTENTION!!! For IE set the content-type m_HttpResponse.SetContentType(\"text/xml\");\r\n\r\n\t\tif ( element.length == 0 ) {\r\n\t\t\tif ( noDisplayErrorMessage != true )\r\n\t\t\t\tErrorMessage( 'GetXMLElementText(xmlhttp, \"' + tagName + '\"); element.length == ' + element.length );\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\tvar text = \"\";\r\n\t\tfor ( var i = 0; i < element.length; i++ ) {\r\n\t\t\tif ( typeof ( element[i].textContent ) == 'undefined' ) {\r\n\t\t\t\tif ( typeof ( element[i].text ) == 'undefined' ) {\r\n\t\t\t\t\tErrorMessage( 'GetXMLElementText(xmlhttp, ' + tagName + '); element[' + i + '].text) == undefined' );\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\t\t\t\tif ( text != \"\" )\r\n\t\t\t\t\ttext += \" \";\r\n\t\t\t\ttext += element[i].text;//IE\r\n\t\t\t}\r\n\t\t\telse text += element[i].textContent;//Chrome\r\n\t\t}\r\n\t\treturn text;\r\n\t}\r\n\r\n\tif ( options.data ) {\r\n\t\tthis.req = options.data.req;\r\n\t\tthis.url = options.data.url;\r\n\t\tthis.params = options.data.params;\r\n\t} else {\r\n\t\ttry {\r\n\t\t\tthis.req = this.loadXMLDoc();\r\n\t\t} catch ( e ) {\r\n\t\t\tvar message;\r\n\t\t\tif ( typeof e.message == 'undefined' )\r\n\t\t\t\tmessage = e;\r\n\t\t\telse message = e.message;\r\n\t\t\tErrorMessage( \"Your browser is too old and is not compatible with our site.\\n\\n\"\r\n\t\t\t\t+ window.navigator.appName + \" \" + window.navigator.appVersion + \"\\n\\n\" + message );\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tif ( !this.req ) {\r\n\t\tconsoleError( \"Invalid myRequest.req: \" + this.req );\r\n\t\treturn;\r\n\t}\r\n\r\n\tfunction ErrorMessage( error ) {\r\n\r\n\t\tconsole.error( error );\r\n\t\toptions.onerror( error );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * @callback onerror\r\n * @param {string} str - error details\r\n */\r\n\r\n/**\r\n * Load file synchronously\r\n * @param {string} url URL of an external file.\r\n * @param {Object} [options] the following options are available.\r\n * @param {Function} [options.onload] function () The onload event occurs when a script has been loaded.\r\n * @param {onerror} [options.onerror] function ( str ) The onerror event occurs when an error has been occured.\r\n * @param {boolean} [options.async=false] true - load file asynchronously. You can use <b>async</b> method instead.\r\n * @returns {string} file content\r\n * @example\r\n * \r\n\t//Simplest example.\r\n\tdocument.getElementById( \"elID\" ).innerHTML = loadFile.sync('element.html');\r\n *\r\n * @example\r\n *\r\n\t//onload, onerror events.\r\n\tdocument.getElementById( \"elID\").innerHTML = loadFile.sync( 'element.html',\r\n\t{\r\n\t\tonload: function ( response ) {\r\n\r\n\t\t\tvar str = 'file has been loaded successfully';\r\n\t\t\tconsole.log( str );\r\n\r\n\t\t},\r\n\t\tonerror: function ( str, e ) {\r\n\r\n\t\t\tconsole.error( str );\r\n\r\n\t\t},\r\n\t}, );\r\n */\r\nfunction sync( url, options ) {\r\n\r\n\toptions = options || {};\r\n\toptions.onload = options.onload || function () { };\r\n\toptions.onerror = options.onerror || function () { };\r\n\r\n\tvar response,\r\n\t\trequest = new myRequest( options );\r\n\trequest.url = url;\r\n\trequest.XMLHttpRequestStart(\r\n\r\n\t\tfunction () {//onreadystatechange\r\n\r\n\t\t\trequest.ProcessReqChange( function ( myRequest ) {//processStatus200\r\n\r\n\t\t\t\tif ( myRequest.processStatus200Error() )\r\n\t\t\t\t\treturn;\r\n\t\t\t\tresponse = myRequest.req.responseText;\r\n\t\t\t\t//console.log( 'loadFile.sync.onload() ' + url );\r\n\t\t\t\toptions.onload( response, url );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\t\t, options.async === undefined ? false : true//Synchronous mode\r\n\r\n\t);\r\n\t//console.log( 'sync(' + url + ')' );\r\n\treturn response;\r\n\r\n}\r\n/**\r\n * Load file asynchronously\r\n * @param {string} url URL of an external file.\r\n * @param {Object} [options] the following options are available.\r\n * @param {Function} [options.onload] function () The onload event occurs when a script has been loaded.\r\n * @param {onerror} [options.onerror] function ( str ) The onerror event occurs when an error has been occured.\r\n * @returns {string} file content\r\n * @example\r\n * \r\n\t//Simplest example.\r\n\tdocument.getElementById( \"elID\" ).innerHTML = loadFile.sync('element.html');\r\n *\r\n * @example\r\n *\r\n\t//onload, onerror events.\r\n\tdocument.getElementById( \"elID\").innerHTML = loadFile.async( 'element.html',\r\n\t{\r\n\t\tonload: function ( response ) {\r\n\r\n\t\t\tvar str = 'file has been loaded successfully';\r\n\t\t\tconsole.log( str );\r\n\r\n\t\t},\r\n\t\tonerror: function ( str, e ) {\r\n\r\n\t\t\tconsole.error( str );\r\n\r\n\t\t},\r\n\t}, );\r\n */\r\nfunction async(url, options) {\r\n\r\n\toptions.async = true;\r\n\tsync(url, options);\r\n\r\n}\r\n\r\n/**\r\n * display a text to HTML\r\n * @param {string} str source text\r\n * @returns {string} escaped text\r\n */\r\nfunction escapeHtml( str ) {\r\n\r\n\treturn str.replace( /[&<>\"'\\/]/g, function ( s ) {\r\n\r\n\t\tvar entityMap = {\r\n\r\n\t\t\t\"&\": \"&amp;\",\r\n\t\t\t\"<\": \"&lt;\",\r\n\t\t\t\">\": \"&gt;\",\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#39;',\r\n\t\t\t\"/\": '&#x2F;'\r\n\r\n\t\t};\r\n\r\n\t\treturn entityMap[s];\r\n\r\n\t} );\r\n}\r\n\r\nexport { sync, async, escapeHtml };\r\n","/**\r\n * node.js version of the synchronous download of the file.\r\n * @author [Andrej Hristoliubov]{@link https://github.com/anhr}\r\n *\r\n * @copyright 2011 Data Arts Team, Google Creative Lab\r\n *\r\n * @license under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n */\r\n\r\nimport { sync, async } from './index.js';\r\n\r\nvar loadFile = {\r\n\r\n\tsync: sync,\r\n\tasync: async,\r\n\r\n}\r\n\r\nexport default loadFile;\r\n","/**\r\n * @module WebGPU\r\n * @description [WebGPU]{@link https://gpuweb.github.io/gpuweb/}. GPU Compute on the web.\r\n * @see [Get started with GPU Compute on the web]{@link https://web.dev/gpu-compute/}\r\n *\r\n * @author [Andrej Hristoliubov]{@link https://github.com/anhr}\r\n *\r\n * @copyright 2011 Data Arts Team, Google Creative Lab\r\n *\r\n * @license under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n*/\r\n\r\nimport loadFile from '../../commonNodeJS/master/loadFileNodeJS/loadFile.js'\r\n\r\nclass WebGPU {\r\n\r\n\t/**\r\n\t * [WebGPU]{@link https://gpuweb.github.io/gpuweb/}. GPU Compute on the web.\r\n\t * @param {object} settings The following settings are available\r\n\t * @param {object} [settings.input] Input values for WebGPU. The following Input values are available:\r\n\t * @param {Array} [settings.input.matrices] Array of input matrices. See [Shader programming]{@link  https://web.dev/gpu-compute/#shader-programming}.\r\n\t * <pre>\r\n\t * Example:\r\n\t * <b>[\r\n\t *   [\r\n\t *      [1, 2, 3, 4],\r\n\t *      [5, 6, 7, 8]\r\n\t *   ],\r\n\t *   [\r\n\t *      [1, 2],\r\n\t *      [3, 4],\r\n\t *      [5, 6],\r\n\t *      [7, 8],\r\n\t *   \r\n\t *]</b>\r\n\t * </pre>\r\n\t * @param {object} [settings.input.params] The following input parameters types are available\r\n\t * @param {object} [settings.input.params.f32] <b>f32</b> type of [floating point literal]{@link https://gpuweb.github.io/gpuweb/wgsl/#floating-point-literal} list.\r\n\t * Every item of the list is <b>key: value</b> pair. <b>value</b> is any [Number]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number} value.\r\n\t * <pre>\r\n\t * Example:\r\n\t * <b>params: {\r\n\t *   f32: {\r\n\t *     c: 0.04,\r\n\t *     radius: 10\r\n\t *   },\r\n\t *},</b>\r\n\t * </pre>\r\n\t * @param {object} [settings.input.params.u32] <b>u32</b> type of [integer literal]{@link https://gpuweb.github.io/gpuweb/wgsl/#integer-literal} list.\r\n\t * Every item of the list is <b>key: value</b> pair. <b>value</b> is any unsigned integer [Number]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number} value.\r\n\t * <pre>\r\n\t * Example:\r\n\t * <b>params: {\r\n\t *   u32: {\r\n\t *     points: 40,\r\n\t *     count: 1000\r\n\t *   },\r\n\t *}</b>\r\n\t * </pre>\r\n\t * @param {Array} [settings.results] Array of descriptions of the output data.\r\n\t * <pre>\r\n\t * Example of <b>settings.results</b> array item:\r\n\t * <b>{\r\n\t *   count: 1000\r\n\t *   out: out => {\r\n\t *\r\n\t *     const aNear = WebGPU.out2Matrix(out, {\r\n\t *\r\n\t *       size: [\r\n\t *         l,\r\n\t *         aNearRowlength,\r\n\t *       ],\r\n\t *       type: Uint32Array,\r\n\t *\r\n\t *     });\r\n\t *     console.log('aNear:');\r\n\t *     console.log(aNear);\r\n\t *\r\n\t *   }\r\n\t *\r\n\t *}</b>\r\n\t * </pre>\r\n\t * The following descriptions have every <b>settings.results</b> item.\r\n\t * @param {Number} settings.results.count Count of output data array items.\r\n\t * @param {Function} settings.results.out <b>function(out)</b> called when output data is ready.\r\n\t * <pre>\r\n\t * <b>out</b> argument is array of output data. See [ArrayBuffer]{@link https://webidl.spec.whatwg.org/#idl-ArrayBuffer}.\r\n\t * </pre>\r\n\t * @param {Number} [settings.results.phase=0] You can divide GPU compute to phases.\r\n\t * <pre>\r\n\t * Please add <b>@group(0) @binding(4) var<uniform> phase : u32;</b> buffer into your [WGSL]{@link https://gpuweb.github.io/gpuweb/wgsl/} source code\r\n\t * if you want to divide GPU compute to phases.\r\n\t * See <a href=\"../../fermatSpiral/WebGPU/create.c\" target=\"_blank\">Shader.c</a> example of [WGSL]{@link https://gpuweb.github.io/gpuweb/wgsl/} source code, where computing was divided to phases.\r\n\t * Note, you can see the <b>switch (phase)</b> in the example, that divides computing to phases.\r\n\t * \r\n\t * Please define a phase, when current output data will be ready.\r\n\t * </pre>\r\n\t * @param {Array} [settings.workgroupCount=[1]] For dispatch work to be performed with the current GPUComputePipeline.\r\n\t * <pre>\r\n\t * See [dispatchWorkgroups]{@link https://gpuweb.github.io/gpuweb/#dom-gpucomputepassencoder-dispatchworkgroups} of [GPUComputePipeline]{@link https://gpuweb.github.io/gpuweb/#gpucomputepipeline}.\r\n\t * <b>workgroupCount[0]</b> is <b>workgroupCountX</b>\r\n\t * <b>workgroupCount[1]</b> is <b>workgroupCountY</b>\r\n\t * <b>workgroupCount[2]</b> is <b>workgroupCountZ</b>\r\n\t * </pre>\r\n\t * @param {USVString} [settings.shaderCode] The [WGSL]{@link https://gpuweb.github.io/gpuweb/wgsl/} source code for the shader module. See [USVString]{@link https://webidl.spec.whatwg.org/#idl-USVString}.\r\n\t * @param {String} [settings.shaderCodeFile] The name of the file with [WGSL]{@link https://gpuweb.github.io/gpuweb/wgsl/} source code.\r\n\t * Have effect only if the <b>shaderCode</b> undefined.\r\n\t * @param {Function} [settings.shaderCodeText] <b>function(text)</b> called after downloading of the shader code from file and before creating of the Shader Module.\r\n\t * See [createShaderModule(descriptor)]{@link https://gpuweb.github.io/gpuweb/#dom-gpudevice-createshadermodule}\r\n\t * <pre>\r\n\t * The <b>text</b> argument is text of the shader code. You can modify shader code and return new text.\r\n\t * Example:\r\n\t * <b>shaderCodeText: function (text) {\r\n\t *   return text.replace( '%debugCount', 1 );\r\n\t *},</b>\r\n\t * </pre>\r\n\t */\r\n\tconstructor(settings) {\r\n\r\n\t\tlet gpuDevice = null;\r\n\r\n\t\t//https://gpuweb.github.io/gpuweb/#initialization-examples\r\n\t\tasync function initializeWebGPU() {\r\n\r\n\t\t\t// Check to ensure the user agent supports WebGPU.\r\n\t\t\tif ( !WebGPU.isSupportWebGPU() )\r\n\t\t\t{\r\n\t\t\t\tconsole.error(\"WebGPU: User agent doesn't support WebGPU. WebGPU is available for now in Chrome Canary https://www.google.com/intl/ru/chrome/canary/ on desktop behind an experimental flag. You can enable it at chrome://flags/#enable-unsafe-webgpu. The API is constantly changing and currently unsafe. As GPU sandboxing isn't implemented yet for the WebGPU API, it is possible to read GPU data for other processes! Don't browse the web with it enabled.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Request an adapter.\r\n\t\t\tconst gpuAdapter = await navigator.gpu.requestAdapter();\r\n\r\n\t\t\t// requestAdapter may resolve with null if no suitable adapters are found.\r\n\t\t\tif (!gpuAdapter) {\r\n\t\t\t\tconsole.error('No WebGPU adapters found.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Request a device.\r\n\t\t\t// Note that the promise will reject if invalid options are passed to the optional\r\n\t\t\t// dictionary. To avoid the promise rejecting always check any features and limits\r\n\t\t\t// against the adapters features and limits prior to calling requestDevice().\r\n\t\t\tgpuDevice = await gpuAdapter.requestDevice();\r\n\r\n\t\t\t// requestDevice will never return null, but if a valid device request can't be\r\n\t\t\t// fulfilled for some reason it may resolve to a device which has already been lost.\r\n\t\t\t// Additionally, devices can be lost at any time after creation for a variety of reasons\r\n\t\t\t// (ie: browser resource management, driver updates), so it's a good idea to always\r\n\t\t\t// handle lost devices gracefully.\r\n\t\t\tgpuDevice.lost.then((info) => {\r\n\t\t\t\tconsole.error(`WebGPU device was lost: ${info.message}`);\r\n\r\n\t\t\t\tgpuDevice = null;\r\n\r\n\t\t\t\t// Many causes for lost devices are transient, so applications should try getting a\r\n\t\t\t\t// new device once a previous one has been lost unless the loss was caused by the\r\n\t\t\t\t// application intentionally destroying the device. Note that any WebGPU resources\r\n\t\t\t\t// created with the previous device (buffers, textures, etc) will need to be\r\n\t\t\t\t// re-created with the new one.\r\n\t\t\t\tif (info.reason != 'destroyed') {\r\n\t\t\t\t\tinitializeWebGPU();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tonWebGPUInitialized();\r\n\r\n\t\t}\r\n\r\n\t\tfunction onWebGPUInitialized() {\r\n\r\n\t\t\tconst input = settings.input;\r\n\t\t\tlet bindGroupLayout, bindGroup;\r\n\t\t\tconst phase = { param: 0, max: 0 }\r\n\t\t\tif (input) {\r\n\r\n\t\t\t\tif (input.matrices)\r\n\t\t\t\t\tinput.matrices.forEach(inputMatrix => {\r\n\r\n\t\t\t\t\t\t//create matrix\r\n\t\t\t\t\t\tconst matrix = [\r\n\t\t\t\t\t\t\tinputMatrix.length,//rows\r\n\t\t\t\t\t\t\tinputMatrix[0].length,//columns\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t\tinputMatrix.forEach(row => row.forEach(value => matrix.push(value)));\r\n\t\t\t\t\t\tinputMatrix.matrix = new Float32Array(matrix);\r\n\r\n\t\t\t\t\t\tinputMatrix.gpuBuffer = gpuDevice.createBuffer({\r\n\t\t\t\t\t\t\tmappedAtCreation: true,\r\n\t\t\t\t\t\t\tsize: inputMatrix.matrix.byteLength,\r\n\t\t\t\t\t\t\tusage: GPUBufferUsage.STORAGE\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tnew Float32Array(inputMatrix.gpuBuffer.getMappedRange()).set(inputMatrix.matrix);\r\n\t\t\t\t\t\tinputMatrix.gpuBuffer.unmap();\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tif (input.params) {\r\n\r\n\t\t\t\t\tfunction writeBuffer(item, type) {\r\n\r\n\t\t\t\t\t\tlet paramBufferSize = 0;\r\n\t\t\t\t\t\tconst data = [];\r\n\t\t\t\t\t\tObject.keys(item).forEach(key => {\r\n\r\n\t\t\t\t\t\t\tlet param = item[key];\r\n\t\t\t\t\t\t\tif (typeof param === \"number\") {\r\n\r\n\t\t\t\t\t\t\t\tfunction isInt(n) { return n % 1 === 0; }\r\n\t\t\t\t\t\t\t\tconst isInteger = isInt(param);\r\n\t\t\t\t\t\t\t\tif ((!isInteger && (type === Uint32Array))) {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.error('WebGPU: Invalid ' + key + ' = ' + param + ' parameter type. ' + (type === Uint32Array ? 'Integer' : 'Float') + ' is allowed only.');\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tparamBufferSize += type.BYTES_PER_ELEMENT;\r\n\t\t\t\t\t\t\t\tdata.push(param);\r\n\r\n\t\t\t\t\t\t\t} else console.error('WebGPU: Invalid param: ' + param);\r\n\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\titem.paramBuffer = gpuDevice.createBuffer({\r\n\r\n\t\t\t\t\t\t\tsize: paramBufferSize,\r\n\t\t\t\t\t\t\tusage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\r\n\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tgpuDevice.queue.writeBuffer(\r\n\r\n\t\t\t\t\t\t\titem.paramBuffer,\r\n\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\tnew type(data)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\titem.data = data;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tObject.keys(input.params).forEach(key => {\r\n\r\n\t\t\t\t\t\tswitch(key){\r\n\r\n\t\t\t\t\t\t\tcase 'f32': writeBuffer(input.params[key], Float32Array); break;\r\n\t\t\t\t\t\t\tcase 'u32': writeBuffer(input.params[key], Uint32Array); break;\r\n\t\t\t\t\t\t\tdefault: console.error('WebGPU: Invalid input.params \"' + key + '\" key.');\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tsettings.results.forEach((result, i) => {\r\n\r\n\t\t\t\tif (!result.out) console.error('WebGPU: settings.results[' + i + '].out is undefined.');\r\n\t\t\t\telse if ((result.phase !== undefined) && (result.phase > phase.max)) phase.max = result.phase;\r\n\r\n\t\t\t});\r\n\t\t\tif (phase.max > 0) {\r\n\r\n\t\t\t\tphase.paramBuffer = gpuDevice.createBuffer({\r\n\r\n\t\t\t\t\tsize: Uint32Array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\tusage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\r\n\r\n\t\t\t\t});\r\n\t\t\t\tgpuDevice.queue.writeBuffer(\r\n\t\t\t\t\tphase.paramBuffer,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tnew Uint32Array([phase.param])\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Result Matrix\r\n\t\t\tif (settings.results)\r\n\t\t\t\tsettings.results.forEach(resultMatrix => {\r\n\r\n\t\t\t\t\tif (resultMatrix.type === undefined) resultMatrix.type = Float32Array;\r\n\t\t\t\t\tconst bufferSize = resultMatrix.type.BYTES_PER_ELEMENT * resultMatrix.count;\r\n\t\t\t\t\tif (!bufferSize) {\r\n\r\n\t\t\t\t\t\tconsole.error('WebGPU: \"count\" key is not defined in the settings.results item.');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( gpuDevice.limits.maxBufferSize < bufferSize ){\r\n\r\n\t\t\t\t\t\tconsole.error('WebGPU: GPUDevice buffer size = ' + bufferSize + ' is limited to ' + gpuDevice.limits.maxBufferSize );\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresultMatrix.buffer = gpuDevice.createBuffer({\r\n\t\r\n\t\t\t\t\t\tsize: bufferSize,\r\n\t\t\t\t\t\tusage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC\r\n\t\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t// Bind group layout and bind group\r\n\r\n\t\t\tconst entriesBindGroupLayout = [], entriesBindGroup = [];\r\n\t\t\tlet binding = 0;\r\n\t\t\tif (input) {\r\n\t\t\t\tif (input.matrices) for (var i = 0; i < input.matrices.length; i++) {\r\n\r\n\t\t\t\t\tentriesBindGroupLayout.push({\r\n\r\n\t\t\t\t\t\tbinding: binding,\r\n\t\t\t\t\t\tvisibility: GPUShaderStage.COMPUTE,\r\n\t\t\t\t\t\tbuffer: { type: \"read-only-storage\" }\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t\tentriesBindGroup.push({\r\n\r\n\t\t\t\t\t\tbinding: binding,\r\n\t\t\t\t\t\tresource: { buffer: input.matrices[i].gpuBuffer }\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbinding++;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif (input.params) {\r\n\r\n\t\t\t\t\tObject.keys(input.params).forEach(key => {\r\n\r\n\t\t\t\t\t\tswitch (key) {\r\n\r\n\t\t\t\t\t\t\tcase 'f32':\r\n\t\t\t\t\t\t\tcase 'u32':\r\n\t\t\t\t\t\t\t\tentriesBindGroupLayout.push({\r\n\r\n\t\t\t\t\t\t\t\t\tbinding: binding,\r\n\t\t\t\t\t\t\t\t\tvisibility: GPUShaderStage.COMPUTE,\r\n\t\t\t\t\t\t\t\t\tbuffer: { type: \"uniform\" }\r\n\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tentriesBindGroup.push({\r\n\t\t\t\t\t\t\t\t\tbinding: binding,\r\n\t\t\t\t\t\t\t\t\tresource: { buffer: input.params[key].paramBuffer, }\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tbinding++;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault: console.error('WebGPU: Invalid input.params \"' + key + '\" key.');\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tif (settings.results) settings.results.forEach(resultMatrix => {\r\n\t\t\t\t\r\n\t\t\t\tentriesBindGroupLayout.push({\r\n\t\r\n\t\t\t\t\tbinding: binding,\r\n\t\t\t\t\tvisibility: GPUShaderStage.COMPUTE,\r\n\t\t\t\t\tbuffer: { type: \"storage\" }\r\n\t\r\n\t\t\t\t});\r\n\t\t\t\tentriesBindGroup.push({\r\n\t\r\n\t\t\t\t\tbinding: binding,\r\n\t\t\t\t\tresource: { buffer: resultMatrix.buffer }\r\n\t\r\n\t\t\t\t});\r\n\t\t\t\tbinding++;\r\n\r\n\t\t\t});\r\n\r\n\t\t\tif ( phase.max > 0 ) {\r\n\t\t\t\t\r\n\t\t\t\tentriesBindGroupLayout.push({\r\n\t\t\t\t\r\n\t\t\t\t\tbinding: binding,\r\n\t\t\t\t\tvisibility: GPUShaderStage.COMPUTE,\r\n\t\t\t\t\tbuffer: { type: \"uniform\" }\r\n\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\tentriesBindGroup.push({\r\n\t\t\t\t\tbinding: binding,\r\n\t\t\t\t\tresource: { buffer: phase.paramBuffer, }\r\n\t\t\t\t});\r\n\t\t\t\tbinding++;\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tbindGroupLayout = gpuDevice.createBindGroupLayout({ entries: entriesBindGroupLayout });\r\n\r\n\t\t\tbindGroup = gpuDevice.createBindGroup({\r\n\r\n\t\t\t\tlayout: bindGroupLayout,\r\n\t\t\t\tentries: entriesBindGroup\r\n\r\n\t\t\t});\r\n\r\n\t\t\t// Compute shader code\r\n\r\n\t\t\tconst shaderCode = settings.shaderCode;\r\n\t\t\tif (shaderCode)\r\n\t\t\t\tonLoad(shaderCode)\r\n\t\t\telse loadFile.async(settings.shaderCodeFile, { onload: function (shaderCode, url ) { onLoad(shaderCode) } } );\r\n\t\t\tasync function onLoad(shaderCode) {\r\n\r\n\t\t\t\tif (settings.shaderCodeText) shaderCode = settings.shaderCodeText(shaderCode);\r\n\t\t\t\tconst shaderModule = gpuDevice.createShaderModule({ code: shaderCode });\r\n\r\n\t\t\t\t// Pipeline setup\r\n\r\n\t\t\t\tconst computePipeline = gpuDevice.createComputePipeline({\r\n\t\t\t\t\tlayout: gpuDevice.createPipelineLayout({\r\n\t\t\t\t\t\tbindGroupLayouts: [bindGroupLayout]\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tcompute: {\r\n\t\t\t\t\t\tmodule: shaderModule,\r\n\t\t\t\t\t\tentryPoint: \"main\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Commands submission\r\n\r\n\t\t\t\tfunction createCommandEncoder() {\r\n\r\n\t\t\t\t\t//https://gpuweb.github.io/gpuweb/#dom-gpudevice-createcommandencoder\r\n\t\t\t\t\tconst commandEncoder = gpuDevice.createCommandEncoder();\r\n\r\n\t\t\t\t\tconst passEncoder = commandEncoder.beginComputePass();\r\n\t\t\t\t\tpassEncoder.setPipeline(computePipeline);\r\n\t\t\t\t\tpassEncoder.setBindGroup(0, bindGroup);//set @group(0) in the shading code\r\n\r\n\t\t\t\t\tlet workgroupCount = [];\r\n\t\t\t\t\tif (input && input.matrices)\r\n\t\t\t\t\t\tinput.matrices.forEach((item, i) => workgroupCount.push(Math.ceil(item.matrix[i] / 8)));\r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\tif (settings.workgroupCount) workgroupCount = settings.workgroupCount;\r\n\t\t\t\t\t\telse workgroupCount.push(1);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst workgroupCountX = workgroupCount[0], workgroupCountY = workgroupCount[1], workgroupCountZ = workgroupCount[3];\r\n\r\n\t\t\t\t\t//https://gpuweb.github.io/gpuweb/#dom-gpucomputepassencoder-dispatchworkgroups\r\n\t\t\t\t\tpassEncoder.dispatchWorkgroups(workgroupCountX, workgroupCountY, workgroupCountZ);\r\n\t\t\t\t\tpassEncoder.end();\r\n\r\n\t\t\t\t\tif (settings.results)\r\n\t\t\t\t\t\tsettings.results.forEach(resultMatrix => {\r\n\r\n\t\t\t\t\t\t\t// Get a GPU buffer for reading in an unmapped state.\r\n\t\t\t\t\t\t\tresultMatrix.gpuReadBuffer = gpuDevice.createBuffer({\r\n\t\t\t\t\t\t\t\tsize: resultMatrix.buffer.size,\r\n\t\t\t\t\t\t\t\tusage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Encode commands for copying buffer to buffer.\r\n\t\t\t\t\t\t\tcommandEncoder.copyBufferToBuffer(\r\n\t\t\t\t\t\t\t\tresultMatrix.buffer, // source buffer\r\n\t\t\t\t\t\t\t\t0, // source offset\r\n\t\t\t\t\t\t\t\tresultMatrix.gpuReadBuffer, // destination buffer\r\n\t\t\t\t\t\t\t\t0, // destination offset\r\n\t\t\t\t\t\t\t\tresultMatrix.buffer.size // size\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\treturn commandEncoder.finish();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Submit GPU commands.\r\n\t\t\t\tgpuDevice.queue.submit([createCommandEncoder()]);\r\n\r\n\t\t\t\t// Read buffer.\r\n\t\t\t\tif (settings.results) {\r\n\r\n\t\t\t\t\tasync function waitResult(i) {\r\n\r\n\t\t\t\t\t\tconst result = settings.results[i];\r\n\t\t\t\t\t\tif( !result.out ) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconsole.error('WebGPU: settings.results[' + i + '].out is undefined.')\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ((result.phase || 0) !== phase.param) return;\r\n\t\t\t\t\t\tawait result.gpuReadBuffer.mapAsync(GPUMapMode.READ);\r\n\t\t\t\t\t\tresult.out(result.gpuReadBuffer.getMappedRange());\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhile ( true ){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (let i = 0; i < settings.results.length; i++) await waitResult(i);\r\n\t\t\t\t\t\tphase.param++;\r\n\t\t\t\t\t\tif (phase.param > phase.max) break;\r\n\t\t\t\t\t\tgpuDevice.queue.writeBuffer(\r\n\t\r\n\t\t\t\t\t\t\tphase.paramBuffer,\r\n\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\tnew Uint32Array([phase.param])\r\n\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tgpuDevice.queue.submit([createCommandEncoder()]);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tinitializeWebGPU();\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * @returns true if your browser supports [WebGPU]{@link https://gpuweb.github.io/gpuweb/}.\r\n * WebGPU is available for now in [Chrome Canary]{@link https://www.google.com/intl/ru/chrome/canary/} on desktop behind an experimental flag.\r\n * You can enable it at <b>chrome://flags/#enable-unsafe-webgpu</b>.\r\n * The API is constantly changing and currently unsafe.\r\n * As GPU sandboxing isn't implemented yet for the WebGPU API, it is possible to read GPU data for other processes! Don't browse the web with it enabled.\r\n * */\r\nWebGPU.isSupportWebGPU = function () { return 'gpu' in navigator; }\r\n\r\n/**\r\n * Converts the <b>out</b> array to matrix.\r\n * @param {ArrayBuffer} out out [ArrayBuffer]{@link https://webidl.spec.whatwg.org/#idl-ArrayBuffer}. See <b>settings.out</b> param of <b>WebGPU</b> class for details.\r\n * @param {object} [settings={}] The following settings are available\r\n * @param {object} [settings.type=Float32Array] type of the <b>out</b> ArrayBuffer. Allowed <b>Float32Array</b> and <b>Uint32Array</b>.\r\n * @param {Array} [settings.size] size of result matrix.\r\n * <pre>\r\n * <b>size.length</b> is dimension of result matrix.\r\n * <b>size[0]</b> is first dimension.\r\n * ---\r\n * <b>size[i]</b> is next dimension.\r\n * ---\r\n * <b>size[size.length - 1]</b> is last dimension.\r\n * Esample:\r\n * <b>[\r\n *   10,//rows count\r\n *   2//columns count\r\n * ]\r\n * </b>\r\n * creates two dimesional matrix with 10 rows and 2 columns.\r\n * \r\n * If <b>size</b> is undefined, then dimension and size of result matrix must be defined in the header of the out:\r\n * First item of the out is dimension of result matrix.\r\n * Second item of the out is first dimension.\r\n * ---\r\n * Next item of the out is next dimension.\r\n * ---\r\n * dimension item of the out is last dimension.\r\n * Example:\r\n * <b>\r\n * const array = new Float32Array(out);\r\n * </b>\r\n * if\r\n * <b>\r\n * array[0] = 2//two dimesional matrix\r\n * array[1] = 10//rows count\r\n * array[2] = 2//columns count\r\n * </b>\r\n * then result matrix is two dimensional matrix with ten rows and two columns.\r\n * </pre>\r\n * @param {Function} [settings.push] <b>function(item)</b>. <b>item</b> - new matrix item.\r\n * Called when a new matrix item is ready. You can add a new item to your matrix.\r\n * The result matrix is empty if you have added <b>push</b> to the <b>setting</b> and <b>settings.returnMatrix</b> is not true.\r\n * @param {boolean} [settings.returnMatrix] true - result matrix is not empty. Has effect only if <b>settings.push</b> is defined.\r\n * @returns result matrix.\r\n */\r\nWebGPU.out2Matrix = function(out, settings={}) {\r\n\t\r\n\tconst array = settings.type ? new settings.type(out) : new Float32Array(out),\r\n\t\tmatrix = [];\r\n\tlet valueIndex,\r\n\t\tdimension;//Dimension of resultMatrix\r\n\tconst size = settings.size;\r\n\tif (size){\r\n\r\n\t\tdimension = size.length;\r\n\t\tvalueIndex = 0;\r\n\t\t\r\n\t} else {\r\n\t\t\r\n\t\tdimension = array[0];\r\n\t\tvalueIndex = dimension + 1;\r\n\r\n\t}\r\n\tfunction iteration (level, matrixLevel) {\r\n\r\n\t\tif (level > dimension) return;\r\n\t\tconst levelCount = size ? size[level -1] : array[level];\r\n\t\tfor (let i = 0; i < levelCount; i++){\r\n\r\n\t\t\tconst matrixNextLevel = [];\r\n\t\t\tif (level === (dimension - 1)) {\r\n\r\n\t\t\t\tconst length = size ? size[dimension - 1] : array[dimension];\r\n\t\t\t\tfor (let j = 0; j < length; j++) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (valueIndex >= array.length){\r\n\r\n\t\t\t\t\t\tconsole.error('WebGPU.out2Matrix: out of the index range of the out array. ' + valueIndex);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmatrixNextLevel.push(array[valueIndex]);\r\n\t\t\t\t\tvalueIndex++;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif (settings.push) settings.push(matrixNextLevel);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tconst nextlLevel = level + 1;\r\n\t\t\t\titeration (nextlLevel, matrixNextLevel);\r\n\r\n\t\t\t}\r\n\t\t\tif (!settings.push || settings.returnMatrix) matrixLevel.push(matrixNextLevel);\r\n\r\n\t\t}\r\n\t\t\r\n\t}\r\n\titeration (1, matrix);\r\n\treturn matrix;\r\n\r\n}\r\n\r\nexport default WebGPU;\r\n"],"names":["myRequest","options","loadXMLDoc","req","window","XMLHttpRequest","ActiveXObject","NewActiveXObject","e","XMLHttpRequestStart","onreadystatechange","async","XMLHttpRequestStop","onerror","event","url","XMLHttpRequestReStart","getUrl","params","open","timeout","ontimeout","timeout_id_SendReq","setTimeout","send","message","abort","ProcessReqChange","processStatus200","readyState","status","processStatus200Error","error","GetElementText","tagName","noDisplayErrorMessage","xmlhttp","responseXML","ErrorMessage","responseText","element","getElementsByTagName","length","text","i","textContent","data","navigator","appName","appVersion","sync","onload","response","request","undefined","loadFile","WebGPU","settings","gpuDevice","initializeWebGPU","isSupportWebGPU","gpuAdapter","gpu","requestAdapter","requestDevice","lost","then","info","reason","onWebGPUInitialized","input","bindGroupLayout","bindGroup","phase","param","max","matrices","forEach","inputMatrix","matrix","row","value","push","Float32Array","gpuBuffer","createBuffer","byteLength","GPUBufferUsage","STORAGE","getMappedRange","set","unmap","writeBuffer","item","type","paramBufferSize","keys","key","isInt","n","isInteger","Uint32Array","BYTES_PER_ELEMENT","console","paramBuffer","UNIFORM","COPY_DST","queue","results","result","out","resultMatrix","bufferSize","count","limits","maxBufferSize","buffer","COPY_SRC","entriesBindGroupLayout","entriesBindGroup","binding","GPUShaderStage","COMPUTE","createBindGroupLayout","entries","createBindGroup","shaderCode","onLoad","shaderCodeFile","shaderCodeText","shaderModule","createShaderModule","code","computePipeline","createComputePipeline","createPipelineLayout","createCommandEncoder","commandEncoder","passEncoder","beginComputePass","setPipeline","setBindGroup","workgroupCount","Math","ceil","workgroupCountX","workgroupCountY","workgroupCountZ","dispatchWorkgroups","end","gpuReadBuffer","size","MAP_READ","copyBufferToBuffer","finish","submit","waitResult","mapAsync","GPUMapMode","READ","out2Matrix","array","valueIndex","dimension","iteration","level","matrixLevel","levelCount","matrixNextLevel","j","nextlLevel","returnMatrix"],"mappings":"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"}